What's the best way to implement projectile decay?
	- Property of WorldObject? Nah, should inherit/compose: not really a property of all worldobjects.
	- Child class of WorldObject?
	- Decay object.
		- Composition w/ WorldObject?
		- Just used in main
	- imperative in main.cpp

- Delta cleanup
	- DeltaAttachable class, go through tree. When an provider/ referencing the target is located, 


- At points I return vector<T*>*, then delete it after use. It should be fine to return a vector<T*>, passing by value.

- SpaceGameObject : WorldObject, has additional properties (vector<Delta> inComingDeltas).
	- Make deltas only have one target.
	- Move all deltas onto these collections.
	- When an object is destroyed, the inComingDeltas as destroyed too.